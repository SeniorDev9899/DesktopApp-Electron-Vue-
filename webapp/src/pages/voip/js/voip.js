/*
说明： 音视频 (VoIP) 桌面版为独立窗口通过 ipcRenderer 和主窗口相互通信
       接收主窗口发来的命令或 IM 消息执行对应操作并反馈。
步骤：  1. 发起音视频
            1.1 接收到主窗口发起的 "Call" 命令根据传入参数发起音视频会话。
            1.2 等待对方同意(会接收到 IM 消息 AcceptMessage)或拒绝(接收 IM 消息 HungupMessage)
            1.3 对方无操作 1 分钟自动超时触发 SummaryMessage
            1.4 结束会话(调用 hungup 方法) 对方结束会话 (会接收到 IM 消息 HungupMessage)
        2. 接收音视频
            2.1 接收到主窗口发送的 IM 消息"InviteMessage"。
            2.2 可以接受(调用 accept 方法)或拒绝(调用 reject 方法)
                3、4 同发起音视频

*/
(function (Voip, dependencies) {
'use strict';

var Vue = dependencies.Vue;
var RongCallLib = dependencies.RongCallLib;
var location = dependencies.location;
var $ = dependencies.jQuery;
// 强制退出，用于关闭窗口前提示确认。
var confirmeQuit = false;
var layer = window.layer;
// Voip 类型 1：语音 2 视频
var CallType = {
    MEDIA_AUDIO: 1,
    MEDIA_VEDIO: 2
};

// 通话状态
var RCCallStatus = {
    RCCallDialing: 1,
    RCCallIncoming: 2,
    RCCallRinging: 3,
    RCCallActive: 4,
    RCCallHangup: 5
};

/*
说明： 会话类型
        1. 单聊
        2. 讨论组
        3. 群组
*/
var ConversationType = {
    Private: 1,
    Discussion: 2,
    Group: 3
};

var utils = {
    /*说明： 获取当前 url 的 query 参数*/
    getQuery: function () {
        var result = {};
        var query = location.search.substring(1);
        var list = query.split('&');
        for (var i = list.length - 1; i >= 0; i--) {
            var item = list[i].split('=');
            result[item[0]] = item[1];
        }
        return result;
    },
    /*说明： 数字前使用 "0" 补位 默认两位*/
    prefixZero: function (str, length) {
        length = length || 2;
        return (Array(length).join(0) + str).slice(-length);
    },
    /*说明： 将以秒为单位的时间转换成 hh:mm:ss 这种格式的时间 */
    secondToMinute: function (value) {
        value = Math.round(value);
        var hour = Math.floor(value / 3600);
        value = value % 3600;
        var minute = utils.prefixZero(Math.floor(value / 60));
        var second = utils.prefixZero(value % 60);
        return (hour > 0 ? hour + ':' : '') + minute + ':' + second;
    },
    /*说明： 字符串格式化，将字符 source 中 "{{数字}}" 替换成 params 中对应的值， 双括号中"数字"为 params 下标*/
    templateFormat: function (source, params) {
        var undef;
        if (arguments.length === 1) {
            return function () {
                var args = $.makeArray(arguments);
                args.unshift(source);
                return $.validator.format.apply(this, args);
            };
        }
        if (params === undef) {
            return source;
        }
        if (arguments.length > 2 && params.constructor !== Array) {
            params = $.makeArray(arguments).slice(1);
        }
        if (params.constructor !== Array) {
            params = [params];
        }
        $.each(params, function (i, n) {
            source = source.replace(new RegExp('\\{{' + i + '\\}}', 'g'), function () {
                return n;
            });
        });
        return source;
    }
};

/*说明： 使用 audio 标签播放声音 来电铃声和等待铃声*/
var sound = {
    ringAudio: null,
    waitAudio: null,
    playRing: function () {
        if (!sound.ringAudio) {
            sound.ringAudio = document.createElement('audio');
            sound.ringAudio.loop = true;
            sound.ringAudio.src = 'data:audio/mp3;base64,';
        }
        sound.ringAudio.play();
    },
    stopRing: function () {
        sound.ringAudio.pause();
        sound.ringAudio.currentTime = 0;
    },
    playWait: function () {
        if (!sound.waitAudio) {
            sound.waitAudio = document.createElement('audio');
            sound.waitAudio.loop = true;
            sound.waitAudio.src = 'data:audio/mp3;base64,';
        }
        sound.waitAudio.play();
    },
    stopWait: function () {
        sound.waitAudio.pause();
        sound.waitAudio.currentTime = 0;
    }
};

var videoEleCache = {};

function init(config) {
    $.extend(Voip.config, config);

    var voip = new Vue({
        el: config.el,
        data: {
            config: Voip.config,
            closeBefore: false,
            tip: '',
            isMaxWin: false,
            isShareScreen: false,
            waiting: true,
            time: 0,
            type: CallType.MEDIA_VEDIO,
            status: '',
            conversation: {},
            self: {
                name: ''
            },
            senderUser: {},
            memberList: [],
            main: {},
            other: [],
            isMac: isMac(),
            /*会议控制*/
            normalMeetUsers: [],
            obersers: [],
            remove: false,
            reqSparkUser: {},
            currentDialogUser: {},
            showWhiteBoard: false,
            openMember: false,
            whiteBoard: false,
            networkErrorVisible: false,
            otherPeople: {},
            callerInvitedUsers: {},
        },
        created: function () {
            var query = utils.getQuery();
            created(this, query);
        },
        computed: {
            locale: function () {
                return Voip.locale[this.config.locale];
            },
            isPrivate: function () {
                return this.conversation.conversationType === 1;
            },
            isVideo: function () {
                return this.type === CallType.MEDIA_VEDIO;
            },
            isAudio: function () {
                return this.type === CallType.MEDIA_AUDIO;
            },
            // // 过滤空值，用于排查问题
            // validNormalMeetUsers: function() {
            //     return this.normalMeetUsers.filter(function (item, i) {
            //         if (!item) {
            //             console.warn('normalMeetUsers item is null', i);
            //             return false;
            //         }
            //         return true;
            //     });
            // },
            // // 过滤空值，用于排查问题
            // validObersers: function() {
            //     return this.obersers.filter(function (item, i) {
            //         if (!item) {
            //             console.warn('obersers item is null', i);
            //             return false;
            //         }
            //         return true;
            //     });
            // }
        },
        directives: {
            video: function (el, binding) {
                var item = binding.value;
                var videoEle = videoEleCache[item.id];
                if (!$.contains(el, videoEle)) {
                    $(el).find('video').remove();
                    $(el).append(videoEle);
                }
                if (videoEle && videoEle.paused) {
                    setTimeout(function () {
                        videoEle.play();
                    });
                }
            },
            scrollbarX: function (el, binding) {
                var nochanged = binding.value === binding.oldValue;
                if (nochanged) {
                    return;
                }

                var $el = $(el);
                if (!$el.data('init')) {
                    $el.data('init', true);
                    $el.append($('<b><i></i></b>'));
                    var scrollOuter = true;
                    var timeoutOuter;
                    var scrollInner = true;
                    var timeoutInner;
                    var $scrollbar = $el.children('b');
                    $scrollbar.on('scroll', function () {
                        if (scrollInner) {
                            var left = $scrollbar.scrollLeft();
                            $el.scrollLeft(left);
                            $scrollbar.css('left', left);

                            scrollOuter = false;
                            clearTimeout(timeoutOuter);
                            timeoutOuter = setTimeout(function () {
                                scrollOuter = true;
                            }, 500);
                        }
                    });
                    $el.on('scroll', function () {
                        if (scrollOuter) {
                            var left = $el.scrollLeft();
                            $scrollbar.scrollLeft(left);
                            $scrollbar.css('left', left);

                            scrollInner = false;
                            clearTimeout(timeoutInner);
                            timeoutInner = setTimeout(function () {
                                scrollInner = true;
                            }, 500);
                        }
                    });
                }
                var scrollbar = $el.children('b');
                scrollbar.hide();
                Vue.nextTick(function () {
                    $el.find('>b>i').css('width', el.scrollWidth);
                    scrollbar.show();
                });
            }
        },
        filters: {
            slice: function (name) {
                if (!name) {
                    return;
                }
                var isChinese = /^[^\x00-\xff]+$/.test(name);
                return isChinese ? name.slice(-1) : name[0].toUpperCase();
            }
        },
        methods: {
            templateFormat: utils.templateFormat,
            // 用于排查问题
            updateSelf: function (value) {
                // if (!value.name) {
                //     console.warn('updateSelf => name is', name);
                //     value.name = '';
                // }
                this.self = value;
            },
            getOtherName: function () {
                var context = this;
                var arr = this.memberList.filter(function (item) {
                    return [context.senderUser.id].indexOf(item.id) === -1;
                }).map(function (item) {
                    return item.name;
                });
                return arr.join('、');
            },
            /*说明： 显示头像图片*/
            showAvatarImg: function (item) {
                var showAvatar = item.waiting || !item.video || item.busy;
                return showAvatar && item.avatar;
            },
            /*说明： 显示头像第一个字符*/
            showAvatarSign: function (item) {
                var showAvatar = item.waiting || !item.video || item.busy;
                return showAvatar && !item.avatar;
            },
            /*说明： 头像显示字符时根据 id 获取背景色*/
            getThemeIndex: function (id) {
                var LENGTH = 6;
                return id ? (id.slice(-1).charCodeAt(0) % LENGTH) : 0;
            },
            /*说明： 隐藏 video 标签未连接时显示用户头像*/
            hiddenVideo: function (item) {
                return item.waiting || !item.video;
            },
            secondToMinute: utils.secondToMinute,
            max: function () {
                Voip.win.max();
                this.isMaxWin = true;
            },
            unmax: function () {
                Voip.win.unmax();
                this.isMaxWin = false;
            },
            min: function () {
                Voip.win.min();
            },
            close: function () {
                this.closeBefore = true;
            },
            enterClose: function () {
                confirmeQuit = true;
                if (this.status === 'ringing') {
                    this.reject();
                } else {
                    this.hungup();
                }
            },
            accept: function () {
                accept(this);
            },
            reject: function () {
                RongCallLib.reject(this.conversation);
            },
            hungup: function () {
                RongCallLib.hungup(this.conversation);
            },
            openVideo: function () {
                this.self.video = true;
                RongCallLib.audioToVideo();
            },
            closeVideo: function () {
                this.self.video = false;
                RongCallLib.videoToAudio();
            },
            openAudio: function () {
                this.self.audio = true;
                RongCallLib.unmute();
            },
            closeAudio: function () {
                this.self.audio = false;
                RongCallLib.mute();
            },
            switchAudio: function () {
                var context = this;
                context.type = CallType.MEDIA_AUDIO;
                context.memberList.forEach(function (item) {
                    item.video = false;
                });
                context.other = [].concat(context.memberList);
                context.closeVideo();
                Voip.win.setBounds(getWinSize(context));
            },
            addMember: function () {
                addMember(this);
            },
            switchMain: function (item) {
                
                var context = this;
                if (context.isVideo) {
                    var index = context.other.indexOf(item);
                    context.other.splice(index, 1);
                    context.other.push(context.main);
                    context.main = item;
                }
            },
            doRemoveUser: function (item) {
                var context = this;
                var user = getUser(this.memberList, item.id);
                var userId = user.id;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostRemoveUser(user.id);
                if (context.main.id === userId) {
                    context.main = context.other[0];
                    context.other.splice(0, 1);
                } else {
                    removeUser(context.other, userId);
                }
                removeUser(context.memberList, userId);
                removeUser(context.other, userId);
                removeUser(context.normalMeetUsers, userId);
                removeUser(context.obersers, userId);
                delete user['remove'];
                context.currentDialogUser = {};

            },
            removeUser: function (item) {
                var context = this;
                var user = getUser(this.memberList, item.id);
                context.currentDialogUser = user;
                context.currentDialogUser.remove = true;
            },
            upUser: function (item) {
                var userId = item.id;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostUpUser(userId);
            },
            becomeHost: function () {
                RongCallLib.Voip.getRtcPeer().blinkMeeting.getHostPower();
                layer.msg('你已经成为主持人');
                this.self.host = true;
                // this.$set(this.self,'host',true)
            },
            downUser: function (item) {
                var context = this;
                var user = getUser(this.memberList, item.id);
                context.currentDialogUser = jQuery.extend(true, {}, user);
                context.currentDialogUser.down = true;
            },
            doDownUser: function (item) {
                var user = getUser(this.memberList, item.id);
                var userId = user.id;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostRequestNormalUserToObserver(userId);
                delete user['down'];
                this.currentDialogUser = {};
            },
            requestBecomeUser: function () {
                RongCallLib.Voip.getRtcPeer().blinkMeeting.observerRequestBecomeNormalUser();
            },
            closeCamera: function (item) {
                var userId = item.id;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostRequestControlUserDevice(userId, 0x01, 0x02);
                var context = this;
                var user = getUser(context.memberList, userId);
                user.video = false;
            },
            openCamera: function (item) {
                var userId = item.id;
                /* var context = this;
                    var user = getUser(context.memberList,userId);
                    user.video = true;*/
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostRequestControlUserDevice(userId, 0x01, 0x01);

            },
            closeMic: function (item) {
                var userId = item.id;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostRequestControlUserDevice(userId, 0x02, 0x02);
                var context = this;
                var user = getUser(context.memberList, userId);
                user.audio = false;
            },
            openMic: function (item) {
                var userId = item.id;
                /* var context = this;
                    var user = getUser(context.memberList,userId);
                    user.audio = true;*/
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostRequestControlUserDevice(userId, 0x02, 0x01);

            },
            refuse: function () {
                this.reqSparkUser = {};
            },
            agree: function (item) {
                var context = this;
                var userId = item.id;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.hostDoObserverRequestBecomeNormalUser(userId, 0x01);
                var user = getUser(context.obersers, userId);
                context.normalMeetUsers.push(user);
                context.other.push(user);
                removeUser(context.obersers, userId);
                this.reqSparkUser = {};

            },
            shareScreen: function () {
                // In the renderer process.
                var context = this;
                RongDesktop.desktopCapturer.getSources({ types: ['screen'] }, function (error, sources) {
                    if (error) {
                        throw error;
                    }
                    var chromeMediaSourceId = sources[1].id;
                    navigator.getUserMedia({
                        audio: false,
                        video: {
                            mandatory: {
                                chromeMediaSource: 'desktop',
                                chromeMediaSourceId: chromeMediaSourceId,
                                minWidth: 1280,
                                maxWidth: 1920,
                                minHeight: 720,
                                maxHeight: 1080
                            }
                        }
                    }, getScreenMediaSuccess, getScreenMediaError);

                });
                function getScreenMediaSuccess(stream) {
                    context.self.share = true;
                    context.isShareScreen = true;
                    RongCallLib.rongRTCStream.publish({
                        id: context.self.id,
                        stream: {
                            tag: 'screen',
                            type: 2,
                            mediaStream: stream
                        }
                    });
                }
                function getScreenMediaError() {
                    console.log('getUserMediaError');
                }
            },
            endShareScreen: function () {
                var context = this;
                context.self.share = false;
                context.isShareScreen = false;
                RongCallLib.rongRTCStream.unpublish({
                    id: context.self.id,
                    stream: {
                        tag: 'screen',
                        type: 2,
                    }
                });
            },
            requestWhiteBoard: function () {
                RongCallLib.requestWhiteBoardURL();
            },
            closeWhiteBoard: function () {
                this.showWhiteBoard = false;
            },
            closeMember: function () {
                this.openMember = !this.openMember;
            },
            acceptBeRequestToUser: function () {
                var context = this;
                RongCallLib.Voip.getRtcPeer().blinkMeeting.doHostRequestToUser(this.currentDialogUser.hostId, 1);
                context.self.obeserver = false;
                context.currentDialogUser = {};

            },
            doControleUserDev: function (item) {

                RongCallLib.Voip.getRtcPeer().blinkMeeting.userDoHostRequestControlUserDevice(item.result.content.from, item.isOpen, item.result.content.type, 0x01);
                item.result.content.type == 1 ? item.user.video = true : item.user.audio = true;
                this.currentDialogUser = {};

            },
            audioHideSelf: function (item) {
                return item.id == this.self.id && this.isAudio;
            },
            networkErrorClose: function () {
                this.hungup();
            }
        }
    });
    Voip.instance = voip;
}
/**
 * 根据本地丢包率变化信号
 *
 */
// 根据本地丢包率变化信号

/*说明: 判读当前操作系统是否为 Mac*/
function isMac() {
    return navigator.userAgent.indexOf('Mac OS X') > 0;
}

/*说明： 显示文字提示框 => 关闭窗口前提示*/
/*function showTip(context, tip) {
    context.tip = tip;
    clearTimeout(showTip.timeout);
    showTip.timeout = setTimeout(function(){
        context.tip = '';
    }, 1000 * Voip.config.tipShowTime);
}*/

/*说明： 根据当前状态 （音视频类型，多人单人） 获取窗口配置大小*/
function getWinSize(context) {
    var key;
    if (context.type === CallType.MEDIA_AUDIO) {
        key = 'audio';
    } else {
        key = 'video';
    }
    if (context.conversation.conversationType === ConversationType.Group) {
        key += 'multi';
    }
    return Voip.config.winSize[key];
}

/*
说明： 音视频通话时间
*/
var startTime = null;
function startTiming(context) {
    startTime = new Date().getTime();
    context.time = 0;
    context.waiting = false;
    setInterval(function () {
        context.time = Math.round((new Date().getTime() - startTime) / 1000);
    }, 500);
}

/*说明：补全用户其他信息 是否等待连接中。视频是否打开，音频是否打开。是否忙碌中*/
function extraUserInfo(list, isVideo) {
    list.forEach(function (item) {
        Vue.set(item, 'waiting', true);
        Vue.set(item, 'video', isVideo);
        Vue.set(item, 'audio', true);
        Vue.set(item, 'busy', false);
        Vue.set(item, 'host', false);
    });
    return list;
}

var handlerCommand = {
    /*说明： 发起音视频会话*/
    Call: function (command, context) {
        context.conversation = {
            conversationType: command.conversationType,
            targetId: command.targetId
        };
        context.status = 'call';
        context.type = command.mediaType;
        context.isShareScreen = command.isShareScreen;
        var memberList = [command.self].concat(command.inviteUserList);
        extraUserInfo(memberList, context.isVideo);
        context.memberList = memberList;
        context.updateSelf(command.self);
        var inviteUserIds = command.inviteUserList.map(function (item) {
            return item.id;
        });
        var observerUserIds = command.inviteUserList.filter(function (t) {
            return t.obeserver;
        }).map(function (item) {
            return item.id;
        });
        if (context.isVideo) {
            context.main = context.self;
            /*     context.other = command.inviteUserList;
                    context.normalMeetUsers = command.inviteUserList;*/
            if (observerUserIds) {
                context.obersers = command.inviteUserList.filter(function (user) {
                    return observerUserIds.indexOf(user.id) > -1;
                });
                context.other = command.inviteUserList.filter(function (user) {
                    return observerUserIds.indexOf(user.id) < 0;
                });
                context.normalMeetUsers = command.inviteUserList.filter(function (user) {
                    return observerUserIds.indexOf(user.id) < 0;
                });
                context.normalMeetUsers.push(command.self);
            }

        } else {
            context.other = $.extend([], context.memberList);
            context.normalMeetUsers = $.extend([], context.memberList);
        }
        Voip.win.setBounds(getWinSize(context));
        var params = {
            conversationType: Number(command.conversationType),
            targetId: command.targetId,
            inviteUserIds: inviteUserIds,
            observerUserIds: observerUserIds,
            isSharing: command.isShareScreen,
            mediaType: command.mediaType
        };
        RongCallLib.call(params, function (errorCode) {
            if (errorCode) {
                console.error('[CallLib][call]', errorCode);
                confirmeQuit = true;
                Voip.win.close();
            }
        });
        sound.playWait();
    },
    /*说明： 接收到音视频会话邀请*/
    InviteMessage: function (command, context) {
        context.conversation = {
            conversationType: command.conversationType,
            targetId: command.targetId
        };
        context.status = 'ringing';
        context.type = command.content.mediaType;
        context.isShareScreen = command.content.sharing;
        var memberList = [command.senderUser].concat(command.inviteUserList);
        extraUserInfo(memberList, context.isVideo);
        context.memberList = memberList;
        var observerUserIds = command.content.observerUserIds;
        if (observerUserIds) {
            context.obersers = command.inviteUserList.filter(function (user) {
                return observerUserIds.indexOf(user.id) > -1;
            });
            // context.normalMeetUsers = command.inviteUserList.filter(function (user) { return user.id != command.self.id })
            context.normalMeetUsers = command.inviteUserList.filter(function (user) {
                return observerUserIds.indexOf(user.id) < 0;
            });

            context.normalMeetUsers.push(command.senderUser);
        }

        context.senderUser = command.senderUser;
        context.updateSelf(getUser(memberList, command.self.id));
        // ring.play();
        sound.playRing();
        Voip.win.setRingPos();
    },
    // RingingMessage: function (command, context) {
    //     sound.playWait();
    // },
    /*说明： 对方同意自己的音视频会话邀请*/
    AcceptMessage: function (command, context) {
        if (context.waiting) {
            sound.stopWait();
            startTiming(context);
        }
        var user;
        var userId = command.senderUserId;
        if (context.main.id === userId) {
            user = context.main;
        } else {
            user = getUser(context.memberList, userId);
        }
        user.waiting = false;
        if (context.isPrivate && context.type == CallType.MEDIA_VEDIO) {
            var main = context.main;
            context.main = context.other[0];
            context.other = [main];
            context.otherPeople = context.main;
            console.log(context.otherPeople);
        }
    },
    /*
    说明： 多人音视频，参与会话人视频打开状态改变 mediaType 1 关闭摄像头 2 打开摄像头
            如果是单聊 mediaType 为 1 时转为语音聊天
    */
    MediaModifyMessage: function (command, context) {
        var userId = command.senderUserId;
        var user;
        if (context.main.id === userId) {
            user = context.main;
        } else {
            user = getUser(context.other, userId);
        }
        var openVideo = command.content.mediaType === CallType.MEDIA_VEDIO;
        user.video = openVideo;
        if (context.isPrivate && !user.video) {
            context.switchAudio();
        }
    },
    /*说明： 多人音视频，参与会话人状态改变时触发，有人加入时*/
    MemberModifyMessage: function (command, context) {
        /*
        content.existedMemberStatusList {existedUserPofiles[]}
        existedUserPofiles {object}
        userId
        mediaId
        mediaType
        callStatus
        */
        console.debug('[voip] [MemberModifyMessage]', command);
        var inviteUserIds = command.content.inviteUserIds;
        // 32840 - 【音视频】对方已挂断，另一方仍显示呼叫中
        context.callerInvitedUsers[command.senderUserId] = inviteUserIds;
        var beInvited = inviteUserIds.indexOf(command.self.id) !== -1;

        var existedUserList = command.existedUserList;
        var existedMemberStatusList = command.content.existedMemberStatusList;
        existedMemberStatusList.forEach(function (item) {
            if (item.callStatus === RCCallStatus.RCCallHangup) {
                removeUser(existedUserList, item.userId);
                removeMember(context, item.userId);
            }
        });
        var observerUserIds = command.content.observerUserIds;
        if (beInvited) {
            context.conversation = {
                conversationType: command.conversationType,
                targetId: command.targetId
            };
            context.status = 'ringing';
            context.type = command.content.mediaType;

            if (observerUserIds) {
                context.obersers = command.inviteUserList.filter(function (user) {
                    return observerUserIds.indexOf(user.id) > -1;
                });
                // context.normalMeetUsers.push(command.senderUser);
                // context.normalMeetUsers.push(getUser(memberList, command.senderUser));
                var normalMeetUsers = command.inviteUserList.filter(function (user) {
                    return user.id != command.self.id;
                });
                normalMeetUsers = command.inviteUserList.filter(function (user) {
                    return observerUserIds.indexOf(user.id) < 0;
                });
                command.existedUserList.forEach(function (user) {
                    context.normalMeetUsers.push(user);
                });
                normalMeetUsers.forEach(function (user) {
                    context.normalMeetUsers.push(user);
                });
            }
            setExistUserStatus(existedUserList, command.content.existedMemberStatusList);
            var memberList = existedUserList.concat(command.inviteUserList);
            extraUserInfo(memberList, context.isVideo);
            context.memberList = memberList;
            context.updateSelf(getUser(memberList, command.self.id));
            context.senderUser = getUser(memberList, command.senderUserId);
            // ring.play();
            sound.playRing();
            Voip.win.setRingPos();
        } else {
            context.obersers = context.obersers.concat(command.inviteUserList.filter(function (user) { return observerUserIds.indexOf(user.id) > -1; }));
            // normalMeetUsers = command.inviteUserList.filter(function (user) {
            //     return user.id != command.self.id;
            // });
            // normalMeetUsers = command.inviteUserList.filter(function (user) {
            //     return observerUserIds.indexOf(user.id) < 0;
            // });
            // 过滤重复邀请成员
            var alreadyExistMember = context.memberList.map(function (item) {
                return item.id;
            });
            var normalMeetUsers = command.inviteUserList.filter(function (item) {
                return alreadyExistMember.indexOf(item.id) === -1;
            });
            var inviteUserList = command.inviteUserList;
            extraUserInfo(inviteUserList, context.isVideo);
            context.other.push.apply(context.other, normalMeetUsers);
            context.normalMeetUsers.push.apply(context.normalMeetUsers, normalMeetUsers);
            context.memberList.push.apply(context.memberList, normalMeetUsers);
        }
    },
    /*说明： 音视频通话，有人挂断时触发*/
    HungupMessage: function (command, context) {
        var isSend = command.messageDirection === 1;
        if (isSend) {
            return;
        }
        var userId = command.senderUserId;
        // 对方忙碌等待 3 秒移除
        var isBusy = command.content.reason === 14;
        var user = getUser(context.memberList, userId);
        if (isBusy && user) {
            user.busy = true;
            user.waiting = false;
            setTimeout(function () {
                removeMember(context, userId);
            }, 1000 * Voip.config.busyShowTime);
        } else {
            removeMember(context, userId);
        }
        // 移除会控栏目
        // removeUser(context.normalMeetUsers, userId);
        // removeUser(context.obersers, userId);
        // removeUser(context.other, userId);
    },
    /*说明： 音视频 汇总结果 通话时长、对方拒绝、对方取消等*/
    SummaryMessage: function (command, context) {
        const { targetId, conversationType } = command;
        const { conversationType: crtType, targetId: crtTar } = context.conversation;

        Voip.request({
            command: 'summary',
            message: command
        });

        if (targetId === crtTar && conversationType === crtType) {
            confirmeQuit = true;
            Voip.win.close();
        }
    },
    Close: function () {
        // IM 退出登录关闭音视频窗口
        confirmeQuit = true;
        Voip.win.close();
    }
};

/*
说明： 基础方法，从一个数组中获取对应 id 的成员
*/
function getUser(list, userId) {
    for (var i = list.length - 1; i >= 0; i--) {
        var item = list[i];
        if (item.id === userId) {
            return item;
        }
    }
}

/*
说明： 基础方法，从一个数组中移除对应 id 的成员
*/
function removeUser(list, userId) {
    if (Object.prototype.toString.call(list) != '[object Array]' || !userId) {
        console.error('error !list userid', list, userId);
        return;
    }
    list.forEach(function (item, index) {
        if (item.id === userId) {
            list.splice(index, 1);
            return false;
        }
    });
}

/*
说明： 多人音视频会话时更新其他成员的状态
*/
function setExistUserStatus(existedUserList, existedMemberStatusList) {
    var tempUserCache = {};
    existedMemberStatusList.forEach(function (item) {
        tempUserCache[item.userId] = item;
    });

    existedUserList.forEach(function (user) {
        var existedStatus = tempUserCache[user.id];
        var isVideo = existedStatus.mediaType === CallType.MEDIA_VEDIO;
        user.video = isVideo;
        user.waiting = existedStatus.callStatus !== RCCallStatus.RCCallActive;
    });
}

/*
说明： 同意对方发起的音视频会话
*/
function accept(context) {
    // 41358 - 【在线会议】音视频通话中，创建会议或者加入参与过的会议，仍可加入
    window.localStorage.setItem('videoCall', 'isOn');
    if (context.isVideo) {
        context.main = context.senderUser;
        context.otherPeople = context.main;
        console.log('accept main', context.senderUser.id);
        if (context.isPrivate) {
            context.other = context.memberList.filter(function (item) {
                return item.id !== context.senderUser.id;
            });
        } else {
            context.other = context.normalMeetUsers.filter(function (item) {
                return item.id !== context.senderUser.id;
            });
        }
    } else {
        context.other = $.extend([], context.memberList);
    }
    context.status = 'call';
    startTiming(context);
    // ring.stop();
    sound.stopRing();
    Voip.win.setBounds(getWinSize(context));

    var conv = context.conversation;
    var userType;
    if (getUser(context.obersers, context.self.id)) {
        userType = 2;
    }
    var params = {
        conversationType: conv.conversationType,
        targetId: conv.targetId,
        mediaType: context.type,
        userType: userType || 1
    };
    RongCallLib.accept(params);
}

/*
说明： 多人聊天时添加聊天成员
*/
function addMember(context) {
    var members = [];
    if (context.isVideo) {
        members = context.other.concat(context.main);
        members = members.concat(context.obersers);
    } else {
        members = context.other;
    }
    var memberIdList = members.map(function (item) {
        return item.id;
    });
    var params = {
        command: 'addMember',
        type: context.type,
        targetId: context.conversation.targetId,
        memberIdList: memberIdList
    };
    Voip.request(params, function (errorCode, list) {
        Voip.win.focus();
        if (errorCode) {
            return;
        }

        var maxlimit = Voip.config.maxMemberCount;
        var memberCount = context.memberList.length;
        memberCount += list.length;
        if (memberCount > maxlimit) {
            // var message = utils.templateFormat(context.locale.tips.maxlimit, maxlimit);
            // showTip(context, message);
            // return;
        }

        var observers = list.filter(function (t) {
            return t.obeserver;
        });
        var normoluser = list.filter(function (t) {
            return !t.obeserver;
        });
        extraUserInfo(list, context.isVideo);
        context.other.push.apply(context.other, normoluser);
        context.normalMeetUsers.push.apply(context.normalMeetUsers, normoluser);

        context.memberList.push.apply(context.memberList, list);
        context.obersers.push.apply(context.obersers, observers);
        var inviteUserIds = list.map(function (item) {
            return item.id;
        });
        var observerUserIds = observers.map(function (item) {
            return item.id;
        });
        var conversation = context.conversation;
        /*群聊邀请过来userid注意是否观察者*/
        var arg = {
            conversationType: conversation.conversationType,
            targetId: conversation.targetId,
            inviteUserIds: inviteUserIds,
            observerUserIds: observerUserIds,
            mediaType: context.type
        };
        RongCallLib.invite(arg, function () {
            // console.log(error);
        });
    });
}

/*
说明： 有人退出多人聊天移除对应数据
*/
function removeMember(context, userId) {
    if (!userId) {
        return;
    }
    if (context.main.id === userId) {
        context.main = context.other[0];
        context.other.splice(0, 1);
    } else {
        removeUser(context.other, userId);
    }
    removeUser(context.memberList, userId);
    removeUser(context.normalMeetUsers, userId);
    removeUser(context.obersers, userId);
    if (context.senderUser.id === userId) {
        var other = context.memberList.filter(function (item) {
            return item.id !== context.self.id && item.waiting === false;
        });
        if (other.length > 0) {
            context.senderUser = other[0];
        } else {
            context.conversation.passive = true;
            RongCallLib.hungup(context.conversation);
            return;
        }
    }

    if (context.memberList.length < 2) {
        context.conversation.passive = true;
        RongCallLib.hungup(context.conversation);
    }

    // 32840 - 【音视频】对方已挂断，另一方仍显示呼叫中
    if (context.callerInvitedUsers[userId]) {
        // 44303 - 【音视频】音视频通话中，添加一个成员通话，等待对方接通中状态，此时其他成员挂断音视频，pc端不显示正常呼叫中的成员头像
        // context.other = context.other.filter(elem => {
        //     return !(context.callerInvitedUsers[userId].indexOf(elem.id) > -1 && elem.waiting === true);
        // });
        if (context.other.length === 0) {
            context.conversation.passive = true;
            RongCallLib.hungup(context.conversation);
            return;
        }
    }
}
function upUserVideoAudiostatus(user, talktype) {
    // talktype[0:无视频有音频, 1:有视频有音频, 2:有视频无音频, 3:无视频无音频]
    if (talktype == 0) {
        user.video = false;
        user.audio = true;
    } else if (talktype == 1) {
        user.video = true;
        user.audio = true;
    } else if (talktype == 2) {
        user.video = true;
        user.audio = false;
    } else {
        user.video = false;
        user.audio = false;
    }
}
/*
说明：  音视频节点事件，底层触发音视频接入(added)音视频断开(removed)网络等原因无法重连断开(disconnect)
*/
var videoItem = {
    added: function (result, context) {
        var talktype = result.talkType;
        var id = result.userId;
        var ele = result.data;
        // var id = $(ele).attr('userid');
        var user;
        if (context.main.id === id) {
            user = context.main;
        } else {
            user = getUser(context.other, id);
        }
        if (user) {
            user.waiting = false;
            context.isVideo && upUserVideoAudiostatus(user, talktype);
        }
        console.debug('[video] [added]', id, user && user.name);
        videoEleCache[id] = ele;
        var tag = result.tag;
        if (tag === 'screen') {
            // 替换屏幕共享视频流
        }
    },
    removed: function (result, context) {
        var id = result.userId;
        var data = result.data;
        // var id = $('#' + data).attr('userid');
        removeMember(context, id);
        removeMember(context, data);
    },
    disconnect: function (result, context) {
        context.hungup();
    },
    leave: function(result, context) {
    }
};
/*  会控的一些通知 主持人降级 主持人升级 主持人邀请 有人被降级 有人被升级..........*/
var meetItem = {
    hostRemoved: function (result, context) {
        layer.msg('你已经被主持人移除');
        confirmeQuit = true;
        setTimeout(function () {
            RongCallLib.hungup(context.conversation);
            Voip.win.close();
        }, 1000);
    },
    userDown: function (result, context) {
        var userId = result.userId;
        delete videoEleCache[userId];
        if (userId == context.self.id) {
            Vue.set(context.self, 'obeserver', true);
        }
        var user = getUser(context.normalMeetUsers, userId);

        if (context.main.id === userId) {
            context.main = context.other[0];
            context.other.splice(0, 1);
            removeUser(context.normalMeetUsers, userId);
        } else {
            removeUser(context.normalMeetUsers, userId);
            removeUser(context.other, userId);
        }
        context.obersers.push(user);

    },
    becomeUser: function (result, context) {
        var id = result.userId;
        var user = getUser(context.obersers, id);
        if (id == context.self.id) {
            Vue.set(context.self, 'obeserver', false);
        }
        if (user) {
            user.video = true;
            user.audio = true;
        }
        console.error('becomeuser', result, user);
        context.normalMeetUsers.push(user);
        context.other.push(user);
        removeUser(context.obersers, id);
    },
    beRequestToUser: function (result, context) {
        context.currentDialogUser = result;
        context.currentDialogUser.method = 'acceptBeRequestToUser';
        context.currentDialogUser.beInviteSpark = true;
    },
    reciveRequestToUser: function (result, context) {
        var user = getUser(context.obersers, result.userId);
        context.reqSparkUser = user;
        user.userReqSpark = true;

    },
    hostRequestControlDevice: function (result, context) {
        var str1 = result.content.index == 1 ? '打开' : '关闭';
        var isOpen = result.content.index == 1;
        if (isOpen) {
            isOpen = true;
        } else {
            isOpen = false;
        }
        var srr2 = result.content.type == 1 ? '摄像头' + str1 : '麦克风';
        var user = getUser(context.memberList, result.userId);

        if (isOpen) {
            context.currentDialogUser.bd = str1 + srr2;
            context.currentDialogUser.result = result;
            context.currentDialogUser.user = user;
            context.currentDialogUser.isOpen = isOpen;
        } else {
            result.content.type == 1 ? user.video = false : user.audio = false;
            RongCallLib.Voip.getRtcPeer().blinkMeeting.userDoHostRequestControlUserDevice(result.content.from, isOpen, result.content.type, 0x01);
        }
    },
    whiteBoardURL: function (result, context) {
        var url = result.url;
        if (!url) {
            console.error('当前没有白板供查看，请等待其他人创建白板!');
        } else {
            url += '&type=web';
            context.showWhiteBoard = true;
            $('#wb').html('<iframe height=\'100%\' width=\'100%\' frameborder=\'0\' scrolling=\'no\' marginheight=\'0\' marginwidth=\'0\' src=\'' + url + '\' />');
        }
    },
    turnTalkType: function (result, context) {
        var userId = result.userId;
        var open = result.open;
        var mediaType = result.mediaType;
        var user = getUser(context.memberList, userId);
        mediaType == 1 ? user.video = open : user.audio = open;
    },
    otherUserBecomeHost: function (result, context) {
        context.self.host = false;
        var user = getUser(context.memberList, result.hostId);
        user.host = true;
    },
    userAgreeOpen: function (result, context) {
        var userId = result.userId;
        var isAgree = result.status == 1;
        var mediaType = result.mediaType;
        var user = getUser(context.memberList, userId);
        if (isAgree) {
            mediaType == 1 ? user.video = open : user.audio = open;
        }
    }
};

function created(context, query) {
    var userId = query.userid;
    var locale = query.locale;
    var appkey = query.appkey;
    var navi = decodeURIComponent(query.navi);
    var token = decodeURIComponent(query.token);
    watchClose(context);
    context.config.locale = locale;
    var config = context.config.voip;
    config.currentUserId = userId;
    config.RongIMLib = RongIMLib;
    config.RongRTC = RongRTC;
    config.setUserId = false,
    config.sendCommand = function (params, callback) {
        console.debug('[voip] [send]', params);
        RongDesktop.voip.voipRequest(params);
        // 模拟发送命令回调
        var requestCallback = function (event, req) {
            var isCommandCallback = req.type === 'commandCallback';
            if (isCommandCallback) {
                var data = req.data;
                console.debug('[voip] [sendcallback]', req);
                if (data.command === params.command) {
                    callback && callback(data.error, data.result);
                    RongDesktop.ipcRenderer.removeListener('onIMRequest', requestCallback);
                }
            }
        };
        RongDesktop.ipcRenderer.on('onIMRequest', requestCallback);
    };
    config.watch = function (callback) {
        const context = this;
        RongDesktop.ipcRenderer.on('onIMRequest', function (event, req) {
            if (req.type === 'message') {
                // 44174 - 【rce-在线会议】会议中，退出rce，自己的主持人权限不会转让
                if (req.data.messageType === 'Close') {
                    context.closeBefore = true;
                } else {
                    var message = req.data;
                    callback(message);
                }
            }
        });
    };

    IMSDK.init({
        appkey,
        navi,
        onstatuschanged: function (status) {
            /**
             * 201: 请求导航中 
             * 202: 请求导航成功
             * 1: 连接 im 中
             * 0: 连接 im 成功
             */
            console.debug('[im] [statuschanged]',status);
            var disconnect = [0, 1, 201, 202].indexOf(status) === -1;
            if (disconnect) {
                // 弹框提示
                context.networkErrorVisible = true;
            }
        }
    });
    IMSDK.connect(token, function () {
        RongCallLib = RongCallLib.init(config);
        // 日志使用方法
        // RongCallLib.logger(function(message, desc){
        //     Voip.win.voipLogger('info', message);
        // });
        // 注册视频节点监听
        RongCallLib.videoWatch(function (result) {
            console.debug('[CallLib] [videoWatch]', result.type, result);
            videoItem[result.type](result, context);
        });
        // 会控命令监听
        // RongCallLib.meetCommandWatche(function (result) {
        //     meetItem[result.type](result, context);
        // });
        // 注册命令监听
        RongCallLib.commandWatch(function (command) {
            console.debug('[CallLib] [commandWatch]', command.messageType, command);
            var handle = handlerCommand[command.messageType];
            if (handle) {
                handle(command, context);
            }
        });

        Voip.ready();
    });
}

function watchClose(context) {
    window.onbeforeunload = function () {
        if (!confirmeQuit) {
            context.closeBefore = true;
            return true;
        }
    };
    // 44174 - 【rce-在线会议】会议中，退出rce，自己的主持人权限不会转让
    RongDesktop.ipcRenderer.on('onIMRequest', function (event, req) {
        if (req.type === 'message' && req.data.messageType === 'Close') {
            context.closeBefore = true;
        }
    });
}

Voip.init = init;

})(Voip, {
    jQuery: jQuery,
    Vue: Vue,
    RongCallLib: RongCallLib,
    location: window.location
});
